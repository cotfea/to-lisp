version: '3'

vars:
  proj_name: hello

tasks:

  default:
    cmds:
      - echo 'Hello World from Task!'
    silent: true

  repl:
    cmds:
      - sbcl
          --noinform
          --load ~/.quicklisp/setup.lisp

  rm:
    cmds:
      - rm -rf ./src
      - rm -rf $HOME/.local/share/common-lisp/source/{{.proj_name}}

  link:
    vars:
      lispsource_home: $HOME/.local/share/common-lisp/source
    cmds:
      - ln -s $(pwd)/src/{{.proj_name}}
          {{.lispsource_home}}/{{.proj_name}}

  create:
    cmds:
      - sbcl
          --noinform
          --load ~/.quicklisp/setup.lisp
          --eval "(ql:quickload \"quickproject\")"
          --eval "(quickproject:make-project
              \"./src/{{.proj_name}}/\"
              :name \"{{.proj_name}}\"
              )"
          --eval "(exit)"
      - cp ./source/{{.proj_name}}.lisp ./src/{{.proj_name}}/hello.lisp
      - cp ./source/package.lisp ./src/{{.proj_name}}/package.lisp
      - task: link

  dev:
    # --eval "(asdf:operate 'asdf:load-op '{{.proj_name}})"
    cmds:
      - cd ./src
        ; sbcl
          --noinform
          --load ~/.quicklisp/setup.lisp
          --eval "(asdf:load-system \"{{.proj_name}}\")"
          --eval "({{.proj_name}}:main \"\")"
          --eval "(exit)"

  # (format t "~a" "Hello World!!!")
  # (write-line "Hello World!!!"))

  # (defun main (argv)
  # (declare (ignore argv))
  # (write-line "Hello World!!!"))

  build:
    vars:
      lispsource_home: $HOME/.local/share/common-lisp/source
    # --eval '(defun main (args) (write-string (drakma:http-request (second args))))' \
    # --eval "(buildapp:build-buildapp \"/usr/bin/buildapp\")"
    # \"--manifest-file\" \"/tmp/quicklisp-manifest.txt\"
    cmds:
      - mkdir -p ./bin
      - sbcl
          --noinform
          --load ~/.quicklisp/setup.lisp
          --eval "(ql:quickload :buildapp)"
          --eval "
              (buildapp::main
                '(
                  \"BUILDAPP\"
                  \"--load-system\" \"{{.proj_name}}\"
                  \"--entry\" \"{{.proj_name}}:main\"
                  \"--output\" \"./bin/{{.proj_name}}\"))
            "
          --eval "(exit)"

  run:
    cmds:
      - ./bin/{{.proj_name}}
